import{_ as s,c as a,o as t,af as l}from"./chunks/framework.C8zwlAzI.js";const g=JSON.parse('{"title":"疑难解答指南","description":"","frontmatter":{},"headers":[],"relativePath":"更多/Troubleshooting.md","filePath":"更多/Troubleshooting.md"}'),e={name:"更多/Troubleshooting.md"};function h(n,i,p,k,r,d){return t(),a("div",null,[...i[0]||(i[0]=[l(`<h1 id="疑难解答指南" tabindex="-1">疑难解答指南 <a class="header-anchor" href="#疑难解答指南" aria-label="Permalink to “疑难解答指南”">​</a></h1><p>本文列出了使用 Webis 时常见的错误及解决方法。</p><h2 id="无法访问-api-401-unauthorized" tabindex="-1">无法访问 API：401 Unauthorized <a class="header-anchor" href="#无法访问-api-401-unauthorized" aria-label="Permalink to “无法访问 API：401 Unauthorized”">​</a></h2><p><strong>原因</strong>：</p><ul><li>没有提供有效的 API Key，或服务器开启了认证。</li></ul><p><strong>解决方法</strong>：</p><ul><li>检查项目根目录下的 <code>api_keys.json</code> 并复制一个有效的 key。</li><li>调用 API 时添加 <code>api_key</code> 参数，例如：</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8000/generate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;prompt&quot;: &quot;hello&quot;, &quot;api_key&quot;: &quot;your-key&quot;}&#39;</span></span></code></pre></div><hr><h2 id="模型加载失败-gpu-显存不足" tabindex="-1">模型加载失败：GPU 显存不足 <a class="header-anchor" href="#模型加载失败-gpu-显存不足" aria-label="Permalink to “模型加载失败：GPU 显存不足”">​</a></h2><p><strong>报错</strong>：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>ValueError: Free memory on device (...) is less than desired GPU memory utilization (...)</span></span></code></pre></div><p><strong>原因</strong>：</p><ul><li>剩余 GPU 显存小于模型所需的显存限制。</li></ul><p><strong>解决方法</strong>：</p><ul><li>设置更低的 <code>GPU_MEMORY_UTILIZATION</code>：</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GPU_MEMORY_UTILIZATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.6</span></span></code></pre></div><hr><h2 id="找不到-libcudart-so-错误" tabindex="-1">找不到 libcudart.so 错误 <a class="header-anchor" href="#找不到-libcudart-so-错误" aria-label="Permalink to “找不到 libcudart.so 错误”">​</a></h2><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>ImportError: libcudart.so.11.0: cannot open shared object file: No such file or directory</span></span></code></pre></div><p><strong>原因</strong>：</p><ul><li>CUDA 动态库未安装或版本不兼容。</li></ul><p><strong>解决方法</strong>：</p><ul><li>通过 conda 安装带对应 CUDA 的 PyTorch：</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytorch-cuda=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytorch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia</span></span></code></pre></div><hr><h2 id="构建失败-未找到-c-编译器" tabindex="-1">构建失败：未找到 C 编译器 <a class="header-anchor" href="#构建失败-未找到-c-编译器" aria-label="Permalink to “构建失败：未找到 C 编译器”">​</a></h2><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>RuntimeError: Failed to find C compiler.</span></span></code></pre></div><p><strong>原因</strong>：</p><ul><li>缺少 <code>gcc</code> 等编译工具，Triton 在编译模型内核时失败。</li></ul><p><strong>解决方法</strong>：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span></span></code></pre></div><hr><h2 id="huggingface-模型下载失败-wsl-网络问题" tabindex="-1">HuggingFace 模型下载失败（WSL 网络问题） <a class="header-anchor" href="#huggingface-模型下载失败-wsl-网络问题" aria-label="Permalink to “HuggingFace 模型下载失败（WSL 网络问题）”">​</a></h2><p><strong>现象</strong>：</p><ul><li>模型下载卡住或提示 <code>ConnectionError</code>, <code>Failed to establish new connection</code></li></ul><p><strong>解决方法</strong>：</p><ol><li>在 Windows CMD 中运行：</li></ol><div class="language-cmd"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ipconfig</span></span></code></pre></div><ol start="2"><li><p>找到机器的 IPv4 地址，例如 <code>192.168.0.123</code></p></li><li><p>在 WSL 中设置代理：</p></li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> http_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://192.168.0.123:7890</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://192.168.0.123:7890</span></span></code></pre></div><hr><h2 id="无模型输出-api-返回空字符串" tabindex="-1">无模型输出 / API 返回空字符串 <a class="header-anchor" href="#无模型输出-api-返回空字符串" aria-label="Permalink to “无模型输出 / API 返回空字符串”">​</a></h2><p><strong>可能原因</strong>：</p><ul><li><code>prompt</code> 内容不完整或缺乏上下文。</li><li><code>max_tokens</code> 设置过低，导致生成被截断。</li></ul><p><strong>建议</strong>：</p><ul><li>适当增加 <code>max_tokens</code> 参数（如 256 → 512）</li><li>使用清晰的 prompt，例如：</li></ul><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>Please extract contact name and phone number from the following HTML: &lt;html&gt;...&lt;/html&gt;</span></span></code></pre></div><hr><h2 id="包管理器锁错误-dpkg-apt" tabindex="-1">包管理器锁错误（dpkg/apt） <a class="header-anchor" href="#包管理器锁错误-dpkg-apt" aria-label="Permalink to “包管理器锁错误（dpkg/apt）”">​</a></h2><p><strong>报错</strong>：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>Waiting for cache lock: Could not get lock /var/lib/dpkg/lock-frontend. It is held by process</span></span></code></pre></div><p><strong>原因</strong>：</p><ul><li>另一个软件包管理进程（apt, apt-get, dpkg 或系统更新）正在运行</li><li>上一次安装被中断，遗留了锁文件</li></ul><p><strong>解决方法</strong>：</p><ol><li>如果有合法更新在运行，等待完成</li><li>如果没有其他更新，检查哪个进程占用锁：</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span></span></code></pre></div><ol start="3"><li>如有必要，删除锁文件（谨慎使用）：</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/apt/lists/lock</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/dpkg/lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/dpkg/lock-frontend</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div>`,59)])])}const c=s(e,[["render",h]]);export{g as __pageData,c as default};
